
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.AnswersScalarFieldEnum = {
  id: 'id',
  answer: 'answer',
  question_id: 'question_id'
};

exports.Prisma.ApplicantsScalarFieldEnum = {
  cv_id: 'cv_id',
  job_id: 'job_id',
  description: 'description',
  apply_date: 'apply_date',
  verified_date: 'verified_date',
  status: 'status',
  feedback: 'feedback'
};

exports.Prisma.AwardsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  start_date: 'start_date',
  end_date: 'end_date',
  cv_id: 'cv_id'
};

exports.Prisma.LanguagesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  certificate: 'certificate',
  level: 'level',
  cv_id: 'cv_id'
};

exports.Prisma.BlogsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  cover_image_url: 'cover_image_url',
  description_url: 'description_url',
  created_at: 'created_at',
  updated_at: 'updated_at',
  user_id: 'user_id'
};

exports.Prisma.CareerPathStepsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  resources: 'resources',
  career_id: 'career_id'
};

exports.Prisma.CareerPathsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  resources: 'resources',
  level: 'level',
  estimate_duration: 'estimate_duration',
  user_id: 'user_id',
  jobspecialized_id: 'jobspecialized_id'
};

exports.Prisma.ReviewsScalarFieldEnum = {
  id: 'id',
  content: 'content',
  stars: 'stars',
  created_at: 'created_at',
  updated_at: 'updated_at',
  user_id: 'user_id'
};

exports.Prisma.CategoriesScalarFieldEnum = {
  id: 'id',
  category_name: 'category_name'
};

exports.Prisma.CertificatesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  link: 'link',
  description: 'description',
  start_date: 'start_date',
  end_date: 'end_date',
  cv_id: 'cv_id'
};

exports.Prisma.CompaniesScalarFieldEnum = {
  id: 'id',
  company_name: 'company_name',
  company_website: 'company_website',
  address_street: 'address_street',
  address_ward: 'address_ward',
  address_city: 'address_city',
  address_country: 'address_country',
  email: 'email',
  phone: 'phone',
  business_certificate: 'business_certificate',
  company_type: 'company_type',
  description: 'description',
  logo_url: 'logo_url',
  background_url: 'background_url',
  employees: 'employees',
  is_verified: 'is_verified',
  fax_code: 'fax_code',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  field_id: 'field_id',
  label_id: 'label_id'
};

exports.Prisma.CompanyLabelsScalarFieldEnum = {
  id: 'id',
  label_name: 'label_name'
};

exports.Prisma.CvsScalarFieldEnum = {
  id: 'id',
  fullname: 'fullname',
  age: 'age',
  gender: 'gender',
  address: 'address',
  email: 'email',
  introduction: 'introduction',
  soft_skills: 'soft_skills',
  primary_skills: 'primary_skills',
  phone: 'phone',
  hobbies: 'hobbies',
  others: 'others',
  apply_job: 'apply_job',
  career_goal: 'career_goal',
  users_id: 'users_id'
};

exports.Prisma.EducationsScalarFieldEnum = {
  id: 'id',
  school: 'school',
  graduated_type: 'graduated_type',
  gpa: 'gpa',
  start_date: 'start_date',
  end_date: 'end_date',
  cv_id: 'cv_id'
};

exports.Prisma.ExperiencesScalarFieldEnum = {
  id: 'id',
  company_name: 'company_name',
  title: 'title',
  description: 'description',
  start_date: 'start_date',
  end_date: 'end_date',
  cv_id: 'cv_id'
};

exports.Prisma.FeaturesScalarFieldEnum = {
  id: 'id',
  feature_name: 'feature_name',
  description: 'description',
  plan_id: 'plan_id'
};

exports.Prisma.FeedbacksScalarFieldEnum = {
  user_id: 'user_id',
  company_id: 'company_id',
  description: 'description',
  stars: 'stars',
  work_environment: 'work_environment',
  benefit: 'benefit',
  created_at: 'created_at'
};

exports.Prisma.FieldsScalarFieldEnum = {
  id: 'id',
  field_name: 'field_name'
};

exports.Prisma.FollowedCompaniesScalarFieldEnum = {
  user_id: 'user_id',
  company_id: 'company_id',
  followed_at: 'followed_at',
  is_notified: 'is_notified'
};

exports.Prisma.JobCategoriesScalarFieldEnum = {
  id: 'id',
  job_category: 'job_category',
  description: 'description'
};

exports.Prisma.JobLabelsScalarFieldEnum = {
  id: 'id',
  label_name: 'label_name'
};

exports.Prisma.JobSpecializedScalarFieldEnum = {
  id: 'id',
  job_type: 'job_type',
  description: 'description',
  jobcategory_id: 'jobcategory_id'
};

exports.Prisma.JobsScalarFieldEnum = {
  id: 'id',
  job_title: 'job_title',
  description: 'description',
  location: 'location',
  benefit: 'benefit',
  working_time: 'working_time',
  salary: 'salary',
  currency: 'currency',
  job_type: 'job_type',
  status: 'status',
  job_level: 'job_level',
  quantity: 'quantity',
  skill_tags: 'skill_tags',
  education: 'education',
  experience: 'experience',
  start_date: 'start_date',
  end_date: 'end_date',
  created_at: 'created_at',
  updated_at: 'updated_at',
  category_id: 'category_id',
  label_id: 'label_id'
};

exports.Prisma.MembershipPlansScalarFieldEnum = {
  id: 'id',
  plan_name: 'plan_name',
  description: 'description',
  price: 'price',
  duration_days: 'duration_days',
  is_active: 'is_active',
  created_at: 'created_at',
  updated_at: 'updated_at'
};

exports.Prisma.MessagesScalarFieldEnum = {
  id: 'id',
  message_content: 'message_content',
  response_content: 'response_content',
  created_at: 'created_at',
  user_id: 'user_id'
};

exports.Prisma.PaymentsScalarFieldEnum = {
  id: 'id',
  amount: 'amount',
  currency: 'currency',
  payment_gateway: 'payment_gateway',
  payment_method: 'payment_method',
  transaction_id: 'transaction_id',
  status: 'status',
  created_at: 'created_at',
  user_id: 'user_id'
};

exports.Prisma.PersonalityTestResultsScalarFieldEnum = {
  user_id: 'user_id',
  question_id: 'question_id',
  answer_id: 'answer_id'
};

exports.Prisma.ProjectsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  start_date: 'start_date',
  end_date: 'end_date',
  cv_id: 'cv_id'
};

exports.Prisma.QuestionsScalarFieldEnum = {
  id: 'id',
  question: 'question'
};

exports.Prisma.ReferencesScalarFieldEnum = {
  id: 'id',
  name: 'name',
  phone: 'phone',
  email: 'email',
  cv_id: 'cv_id'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  role_name: 'role_name'
};

exports.Prisma.SavedJobsScalarFieldEnum = {
  user_id: 'user_id',
  job_id: 'job_id',
  saved_at: 'saved_at'
};

exports.Prisma.SubscriptionsScalarFieldEnum = {
  id: 'id',
  start_date: 'start_date',
  end_date: 'end_date',
  amount_paid: 'amount_paid',
  is_extended: 'is_extended',
  status: 'status',
  user_id: 'user_id',
  plan_id: 'plan_id',
  payment_id: 'payment_id'
};

exports.Prisma.UserActivitiesHistoryScalarFieldEnum = {
  id: 'id',
  activity_name: 'activity_name',
  time: 'time',
  user_id: 'user_id'
};

exports.Prisma.UserNotificationsScalarFieldEnum = {
  id: 'id',
  user_id: 'user_id',
  title: 'title',
  content: 'content',
  type: 'type',
  is_read: 'is_read',
  sent_at: 'sent_at',
  read_at: 'read_at'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  avatar_url: 'avatar_url',
  email: 'email',
  phone: 'phone',
  address_street: 'address_street',
  address_ward: 'address_ward',
  address_city: 'address_city',
  address_country: 'address_country',
  gender: 'gender',
  is_deleted: 'is_deleted',
  created_at: 'created_at',
  updated_at: 'updated_at',
  role_id: 'role_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.ApplicantsStatus = exports.$Enums.ApplicantsStatus = {
  pending: 'pending',
  approved: 'approved',
  rejected: 'rejected'
};

exports.Company_Type = exports.$Enums.Company_Type = {
  business_househole: 'business_househole',
  business: 'business'
};

exports.Education = exports.$Enums.Education = {
  bachelor: 'bachelor',
  mastter: 'mastter',
  phd: 'phd',
  others: 'others',
  highschool_graduate: 'highschool_graduate'
};

exports.Gender = exports.$Enums.Gender = {
  male: 'male',
  female: 'female',
  others: 'others'
};

exports.Job_Status = exports.$Enums.Job_Status = {
  over_due: 'over_due',
  on_going: 'on_going'
};

exports.Job_Type = exports.$Enums.Job_Type = {
  remote: 'remote',
  part_time: 'part_time',
  full_time: 'full_time',
  others: 'others'
};

exports.NotificationsType = exports.$Enums.NotificationsType = {
  system: 'system',
  pricing_plan: 'pricing_plan',
  applicant: 'applicant',
  followed: 'followed'
};

exports.PaymentGateway = exports.$Enums.PaymentGateway = {
  MoMo: 'MoMo',
  Bank: 'Bank',
  ZaloPay: 'ZaloPay',
  Stripe: 'Stripe'
};

exports.PaymentMethod = exports.$Enums.PaymentMethod = {
  bank_card: 'bank_card',
  e_wallet: 'e_wallet',
  bank_transfer: 'bank_transfer',
  QR_Code: 'QR_Code'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  success: 'success',
  failure: 'failure'
};

exports.SubscriptionStatus = exports.$Enums.SubscriptionStatus = {
  on_going: 'on_going',
  over_date: 'over_date',
  canceled: 'canceled'
};

exports.Prisma.ModelName = {
  answers: 'answers',
  applicants: 'applicants',
  awards: 'awards',
  languages: 'languages',
  blogs: 'blogs',
  careerPathSteps: 'careerPathSteps',
  careerPaths: 'careerPaths',
  reviews: 'reviews',
  categories: 'categories',
  certificates: 'certificates',
  companies: 'companies',
  companyLabels: 'companyLabels',
  cvs: 'cvs',
  educations: 'educations',
  experiences: 'experiences',
  features: 'features',
  feedbacks: 'feedbacks',
  fields: 'fields',
  followedCompanies: 'followedCompanies',
  jobCategories: 'jobCategories',
  jobLabels: 'jobLabels',
  jobSpecialized: 'jobSpecialized',
  jobs: 'jobs',
  membershipPlans: 'membershipPlans',
  messages: 'messages',
  payments: 'payments',
  personalityTestResults: 'personalityTestResults',
  projects: 'projects',
  questions: 'questions',
  references: 'references',
  roles: 'roles',
  savedJobs: 'savedJobs',
  subscriptions: 'subscriptions',
  userActivitiesHistory: 'userActivitiesHistory',
  userNotifications: 'userNotifications',
  users: 'users'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\ADMIN\\Downloads\\BRIPATH\\backend\\src\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\ADMIN\\Downloads\\BRIPATH\\backend\\src\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel answers {\n  id                     Int                      @id @default(autoincrement())\n  answer                 String                   @db.VarChar(150)\n  embedding              Unsupported(\"vector\")?\n  question_id            Int\n  questions              questions                @relation(fields: [question_id], references: [id])\n  personalityTestResults personalityTestResults[]\n}\n\nmodel applicants {\n  cv_id         Int\n  job_id        String\n  description   String?\n  apply_date    DateTime         @default(now())\n  verified_date DateTime\n  status        ApplicantsStatus @default(pending)\n  feedback      String?\n  cvs           cvs              @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n  jobs          jobs             @relation(fields: [job_id], references: [id], onDelete: Cascade)\n\n  @@id([cv_id, job_id])\n}\n\nmodel awards {\n  id          Int       @id @default(autoincrement())\n  title       String    @db.VarChar(255)\n  description String?   @db.Text\n  start_date  DateTime? @db.Date\n  end_date    DateTime? @db.Date\n  cv_id       Int\n  cvs         cvs       @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n}\n\nmodel languages {\n  id          Int     @id @default(autoincrement())\n  name        String  @db.VarChar(100)\n  certificate String? @db.Text\n  level       String? @db.VarChar(50)\n  cv_id       Int\n  cvs         cvs     @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n}\n\nmodel blogs {\n  id              Int      @id @default(autoincrement())\n  title           String   @db.VarChar(255)\n  cover_image_url String\n  description_url String\n  created_at      DateTime @default(now())\n  updated_at      DateTime @updatedAt\n  user_id         String\n  users           users    @relation(fields: [user_id], references: [id])\n}\n\nmodel careerPathSteps {\n  id          Int         @id @default(autoincrement())\n  title       String      @db.VarChar(100)\n  description String?\n  resources   String?\n  career_id   Int\n  careerPaths careerPaths @relation(fields: [career_id], references: [id])\n}\n\nmodel careerPaths {\n  id                Int               @id @default(autoincrement())\n  title             String            @db.VarChar(150)\n  description       String?\n  resources         String?\n  level             String?           @db.VarChar(100)\n  estimate_duration String?           @db.VarChar(50)\n  user_id           String\n  jobspecialized_id Int               @unique\n  careerPathSteps   careerPathSteps[]\n  jobSpecialized    jobSpecialized    @relation(fields: [jobspecialized_id], references: [id])\n  users             users             @relation(fields: [user_id], references: [id])\n}\n\nmodel reviews {\n  id         Int      @id @default(autoincrement())\n  content    String   @db.VarChar(255)\n  stars      Float    @db.Real\n  created_at DateTime @default(now())\n  updated_at DateTime @updatedAt\n  user_id    String\n  users      users    @relation(fields: [user_id], references: [id])\n}\n\nmodel categories {\n  id            Int    @id @default(autoincrement())\n  category_name String @unique @db.VarChar(50)\n  jobs          jobs[]\n}\n\nmodel certificates {\n  id          Int       @id @default(autoincrement())\n  title       String?   @db.VarChar(255)\n  link        String?   @db.Text\n  description String?   @db.Text\n  start_date  DateTime? @db.Date\n  end_date    DateTime? @db.Date\n  cv_id       Int\n  cvs         cvs       @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n}\n\nmodel companies {\n  id                   String              @id @default(uuid())\n  company_name         String              @unique @db.VarChar(150)\n  company_website      String?\n  address_street       String              @db.VarChar(50)\n  address_ward         String              @db.VarChar(50)\n  address_city         String              @db.VarChar(50)\n  address_country      String              @db.VarChar(50)\n  email                String              @unique @db.VarChar(50)\n  phone                String              @unique @db.VarChar(12)\n  business_certificate String?\n  company_type         Company_Type        @default(business_househole)\n  description          String?\n  logo_url             String?\n  background_url       String?\n  employees            Int?\n  is_verified          Boolean             @default(false)\n  fax_code             String?             @db.VarChar(20)\n  is_deleted           Boolean             @default(false)\n  created_at           DateTime            @default(now())\n  updated_at           DateTime            @updatedAt\n  field_id             Int?\n  label_id             Int?\n  fields               fields?             @relation(fields: [field_id], references: [id])\n  users                users               @relation(fields: [id], references: [id])\n  companyLabels        companyLabels?      @relation(fields: [label_id], references: [id])\n  feedbacks            feedbacks[]\n  followedCompanies    followedCompanies[]\n}\n\nmodel companyLabels {\n  id         Int         @id @default(autoincrement())\n  label_name String      @unique @db.VarChar(100)\n  companies  companies[]\n}\n\nmodel cvs {\n  id             Int                    @id @default(autoincrement())\n  fullname       String                 @db.VarChar(50)\n  age            Int?\n  gender         String?                @db.VarChar(10)\n  address        String?                @db.VarChar(200)\n  email          String?                @db.VarChar(50)\n  introduction   String?                @db.Text\n  soft_skills    String[]\n  primary_skills String[]\n  phone          String?                @db.VarChar(12)\n  hobbies        String?                @db.Text\n  others         String?                @db.Text\n  apply_job      String?                @db.VarChar(50)\n  career_goal    String?                @db.Text\n  users_id       String\n  embedding      Unsupported(\"vector\")?\n  applicants     applicants[]\n  awards         awards[]\n  certificates   certificates[]\n  educations     educations[]\n  experiences    experiences[]\n  projects       projects[]\n  references     references[]\n  languages      languages[]\n  users          users                  @relation(fields: [users_id], references: [id])\n}\n\nmodel educations {\n  id             Int       @id @default(autoincrement())\n  school         String?   @db.VarChar(150)\n  graduated_type String?   @db.VarChar(250)\n  gpa            Float?    @db.Real\n  start_date     DateTime? @db.Date\n  end_date       DateTime? @db.Date\n  cv_id          Int\n  cvs            cvs       @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n}\n\nmodel experiences {\n  id           Int       @id @default(autoincrement())\n  company_name String?   @db.VarChar(255)\n  title        String?   @db.VarChar(255)\n  description  String?   @db.Text\n  start_date   DateTime? @db.Date\n  end_date     DateTime? @db.Date\n  cv_id        Int\n  cvs          cvs       @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n}\n\nmodel features {\n  id              Int              @id @default(autoincrement())\n  feature_name    String           @db.VarChar(100)\n  description     String?          @db.VarChar(255)\n  plan_id         Int?\n  membershipPlans membershipPlans? @relation(fields: [plan_id], references: [id])\n}\n\nmodel feedbacks {\n  user_id          String\n  company_id       String\n  description      String\n  stars            Float     @db.Real\n  work_environment String?\n  benefit          String?\n  created_at       DateTime  @default(now())\n  companies        companies @relation(fields: [company_id], references: [id])\n  users            users     @relation(fields: [user_id], references: [id])\n\n  @@id([user_id, company_id])\n}\n\nmodel fields {\n  id         Int         @id @default(autoincrement())\n  field_name String      @unique @db.VarChar(100)\n  companies  companies[]\n}\n\nmodel followedCompanies {\n  user_id     String\n  company_id  String\n  followed_at DateTime  @default(now())\n  is_notified Boolean   @default(true)\n  companies   companies @relation(fields: [company_id], references: [id])\n  users       users     @relation(fields: [user_id], references: [id])\n\n  @@id([user_id, company_id])\n}\n\nmodel jobCategories {\n  id             Int                    @id @default(autoincrement())\n  job_category   String                 @unique @db.VarChar(100)\n  description    String?                @db.VarChar(255)\n  embedding      Unsupported(\"vector\")?\n  jobSpecialized jobSpecialized[]\n}\n\nmodel jobLabels {\n  id         Int    @id @default(autoincrement())\n  label_name String @unique @db.VarChar(50)\n  jobs       jobs[]\n}\n\nmodel jobSpecialized {\n  id             Int                    @id @default(autoincrement())\n  job_type       String                 @db.VarChar(100)\n  description    String?                @db.VarChar(150)\n  embedding      Unsupported(\"vector\")?\n  jobcategory_id Int\n  careerPaths    careerPaths?\n  jobCategories  jobCategories          @relation(fields: [jobcategory_id], references: [id])\n}\n\nmodel jobs {\n  id           String                 @id @default(uuid())\n  job_title    String                 @db.VarChar(150)\n  description  String\n  location     String?                @db.VarChar(150)\n  benefit      String?                @db.VarChar(255)\n  working_time String?                @db.VarChar(50)\n  salary       String[]               @default([\"Thỏa thuận\"])\n  currency     String?                @default(\"VND\") @db.VarChar(3)\n  job_type     Job_Type?\n  status       Job_Status?\n  job_level    String                 @db.VarChar(50)\n  quantity     Int?\n  skill_tags   String[]\n  education    Education?\n  experience   String?\n  embedding    Unsupported(\"vector\")?\n  start_date   DateTime               @default(now()) @db.Date\n  end_date     DateTime?              @db.Date\n  created_at   DateTime               @default(now())\n  updated_at   DateTime               @updatedAt\n  category_id  Int?\n  label_id     Int?\n  applicants   applicants[]\n  categories   categories?            @relation(fields: [category_id], references: [id])\n  jobLabels    jobLabels?             @relation(fields: [label_id], references: [id])\n  savedJobs    savedJobs[]\n}\n\nmodel membershipPlans {\n  id            Int             @id @default(autoincrement())\n  plan_name     String          @db.VarChar(50)\n  description   String?\n  price         BigInt\n  duration_days Int             @db.SmallInt\n  is_active     Boolean         @default(true)\n  created_at    DateTime        @default(now())\n  updated_at    DateTime        @updatedAt\n  features      features[]\n  subscriptions subscriptions[]\n}\n\nmodel messages {\n  id               Int      @default(autoincrement())\n  message_content  String?\n  response_content String?\n  created_at       DateTime @default(now())\n  user_id          String\n  users            users    @relation(fields: [user_id], references: [id])\n\n  @@id([id, user_id])\n}\n\nmodel payments {\n  id              String         @id @default(uuid())\n  amount          BigInt\n  currency        String?        @db.VarChar(10)\n  payment_gateway PaymentGateway\n  payment_method  PaymentMethod\n  transaction_id  String?        @db.VarChar(100)\n  status          PaymentStatus\n  created_at      DateTime       @default(now())\n  user_id         String\n  users           users          @relation(fields: [user_id], references: [id])\n  subscriptions   subscriptions?\n}\n\nmodel personalityTestResults {\n  user_id     String\n  question_id Int\n  answer_id   Int\n  answers     answers   @relation(fields: [answer_id], references: [id])\n  questions   questions @relation(fields: [question_id], references: [id])\n  users       users     @relation(fields: [user_id], references: [id])\n\n  @@id([user_id, question_id, answer_id])\n}\n\nmodel projects {\n  id          Int       @id @default(autoincrement())\n  title       String    @db.VarChar(255)\n  description String?   @db.Text\n  start_date  DateTime? @db.Date\n  end_date    DateTime? @db.Date\n  cv_id       Int\n  cvs         cvs       @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n}\n\nmodel questions {\n  id                     Int                      @id @default(autoincrement())\n  question               String                   @unique @db.VarChar(100)\n  answers                answers[]\n  personalityTestResults personalityTestResults[]\n}\n\nmodel references {\n  id    Int     @id @default(autoincrement())\n  name  String  @db.VarChar(100)\n  phone String? @db.VarChar(12)\n  email String? @db.VarChar(50)\n  cv_id Int\n  cvs   cvs     @relation(fields: [cv_id], references: [id], onDelete: Cascade)\n}\n\nmodel roles {\n  id        Int     @id @default(autoincrement())\n  role_name String  @unique @db.VarChar(50)\n  users     users[]\n}\n\nmodel savedJobs {\n  user_id  String\n  job_id   String\n  saved_at DateTime @default(now())\n  jobs     jobs     @relation(fields: [job_id], references: [id])\n  users    users    @relation(fields: [user_id], references: [id])\n\n  @@id([user_id, job_id])\n}\n\nmodel subscriptions {\n  id              String             @id @default(uuid())\n  start_date      DateTime           @default(now())\n  end_date        DateTime\n  amount_paid     BigInt\n  is_extended     Boolean            @default(false)\n  status          SubscriptionStatus @default(on_going)\n  user_id         String\n  plan_id         Int\n  payment_id      String             @unique\n  payments        payments           @relation(fields: [payment_id], references: [id])\n  membershipPlans membershipPlans    @relation(fields: [plan_id], references: [id])\n  users           users              @relation(fields: [user_id], references: [id])\n}\n\nmodel userActivitiesHistory {\n  id            Int      @default(autoincrement())\n  activity_name String   @db.VarChar(100)\n  time          DateTime @default(now())\n  user_id       String\n  users         users    @relation(fields: [user_id], references: [id])\n\n  @@id([id, user_id])\n}\n\nmodel userNotifications {\n  id      Int               @default(autoincrement())\n  user_id String\n  title   String            @db.VarChar(150)\n  content String?           @db.VarChar(255)\n  type    NotificationsType @default(system)\n  is_read Boolean           @default(false)\n  sent_at DateTime          @default(now())\n  read_at DateTime?\n  users   users             @relation(fields: [user_id], references: [id])\n\n  @@id([id, user_id])\n}\n\nmodel users {\n  id                     String                   @id @default(uuid())\n  username               String                   @db.VarChar(100)\n  password               String                   @db.VarChar(255)\n  avatar_url             String?\n  email                  String                   @unique @db.VarChar(50)\n  phone                  String?                  @unique @db.VarChar(12)\n  address_street         String?                  @db.VarChar(50)\n  address_ward           String?                  @db.VarChar(50)\n  address_city           String?                  @db.VarChar(50)\n  address_country        String?                  @db.VarChar(50)\n  gender                 Gender?\n  is_deleted             Boolean                  @default(false)\n  created_at             DateTime                 @default(now())\n  updated_at             DateTime                 @updatedAt\n  role_id                Int\n  cvs                    cvs[]\n  blogs                  blogs[]\n  careerPaths            careerPaths[]\n  companies              companies?\n  feedbacks              feedbacks[]\n  followedCompanies      followedCompanies[]\n  messages               messages[]\n  payments               payments[]\n  personalityTestResults personalityTestResults[]\n  savedJobs              savedJobs[]\n  subscriptions          subscriptions[]\n  userActivitiesHistory  userActivitiesHistory[]\n  reviews                reviews[]\n  userNotifications      userNotifications[]\n  roles                  roles                    @relation(fields: [role_id], references: [id])\n}\n\nenum ApplicantsStatus {\n  pending  @map(\"Đang chờ\")\n  approved @map(\"Chấp nhận\")\n  rejected @map(\"Từ chối\")\n}\n\nenum Company_Type {\n  business_househole @map(\"Hộ kinh doanh\")\n  business           @map(\"Doanh nghiệp\")\n}\n\nenum Education {\n  bachelor            @map(\"Cử nhân\")\n  mastter             @map(\"Thạc sĩ\")\n  phd                 @map(\"Tiến sĩ\")\n  others              @map(\"Khác\")\n  highschool_graduate @map(\"Tốt nghiệp trung học phổ thông\")\n}\n\nenum Gender {\n  male   @map(\"Nam\")\n  female @map(\"Nữ\")\n  others @map(\"Khác\")\n}\n\nenum Job_Status {\n  over_due @map(\"Hết hạn\")\n  on_going @map(\"Đang mở\")\n}\n\nenum Job_Type {\n  remote\n  part_time @map(\"Part time\")\n  full_time @map(\"Full time\")\n  others    @map(\"Khác\")\n}\n\nenum NotificationsType {\n  system       @map(\"Hệ thống\")\n  pricing_plan @map(\"Gói đăng ký\")\n  applicant    @map(\"Hồ sơ\")\n  followed     @map(\"Đang theo dõi\")\n}\n\nenum PaymentGateway {\n  MoMo\n  Bank\n  ZaloPay\n  Stripe\n}\n\nenum PaymentMethod {\n  bank_card     @map(\"Thẻ ngân hàng\")\n  e_wallet      @map(\"Ví điện tử\")\n  bank_transfer @map(\"Chuyển khoản\")\n  QR_Code       @map(\"Mã QR\")\n}\n\nenum PaymentStatus {\n  success @map(\"Thành công\")\n  failure @map(\"Thất bại\")\n}\n\nenum SubscriptionStatus {\n  on_going  @map(\"Còn hạn\")\n  over_date @map(\"Hết hạn\")\n  canceled  @map(\"Đã hủy\")\n}\n",
  "inlineSchemaHash": "3813c7eba1a909fe174e2153b495925615adae2b934372fc98b92db386fd62a5",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"answers\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"answer\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"questions\",\"relationName\":\"answersToquestions\"},{\"name\":\"personalityTestResults\",\"kind\":\"object\",\"type\":\"personalityTestResults\",\"relationName\":\"answersTopersonalityTestResults\"}],\"dbName\":null},\"applicants\":{\"fields\":[{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apply_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"verified_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ApplicantsStatus\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"applicantsTocvs\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"jobs\",\"relationName\":\"applicantsTojobs\"}],\"dbName\":null},\"awards\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"awardsTocvs\"}],\"dbName\":null},\"languages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"certificate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"cvsTolanguages\"}],\"dbName\":null},\"blogs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cover_image_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"blogsTousers\"}],\"dbName\":null},\"careerPathSteps\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resources\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"career_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerPaths\",\"kind\":\"object\",\"type\":\"careerPaths\",\"relationName\":\"careerPathStepsTocareerPaths\"}],\"dbName\":null},\"careerPaths\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resources\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"estimate_duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobspecialized_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerPathSteps\",\"kind\":\"object\",\"type\":\"careerPathSteps\",\"relationName\":\"careerPathStepsTocareerPaths\"},{\"name\":\"jobSpecialized\",\"kind\":\"object\",\"type\":\"jobSpecialized\",\"relationName\":\"careerPathsTojobSpecialized\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"careerPathsTousers\"}],\"dbName\":null},\"reviews\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stars\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"reviewsTousers\"}],\"dbName\":null},\"categories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"category_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"jobs\",\"relationName\":\"categoriesTojobs\"}],\"dbName\":null},\"certificates\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"certificatesTocvs\"}],\"dbName\":null},\"companies\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company_website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_ward\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"business_certificate\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company_type\",\"kind\":\"enum\",\"type\":\"Company_Type\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logo_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"background_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"employees\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_verified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"fax_code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"is_deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"field_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fields\",\"kind\":\"object\",\"type\":\"fields\",\"relationName\":\"companiesTofields\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"companiesTousers\"},{\"name\":\"companyLabels\",\"kind\":\"object\",\"type\":\"companyLabels\",\"relationName\":\"companiesTocompanyLabels\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"feedbacks\",\"relationName\":\"companiesTofeedbacks\"},{\"name\":\"followedCompanies\",\"kind\":\"object\",\"type\":\"followedCompanies\",\"relationName\":\"companiesTofollowedCompanies\"}],\"dbName\":null},\"companyLabels\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"companies\",\"relationName\":\"companiesTocompanyLabels\"}],\"dbName\":null},\"cvs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"fullname\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"age\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"gender\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"introduction\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"soft_skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"primary_skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hobbies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"others\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apply_job\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"career_goal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"applicants\",\"kind\":\"object\",\"type\":\"applicants\",\"relationName\":\"applicantsTocvs\"},{\"name\":\"awards\",\"kind\":\"object\",\"type\":\"awards\",\"relationName\":\"awardsTocvs\"},{\"name\":\"certificates\",\"kind\":\"object\",\"type\":\"certificates\",\"relationName\":\"certificatesTocvs\"},{\"name\":\"educations\",\"kind\":\"object\",\"type\":\"educations\",\"relationName\":\"cvsToeducations\"},{\"name\":\"experiences\",\"kind\":\"object\",\"type\":\"experiences\",\"relationName\":\"cvsToexperiences\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"projects\",\"relationName\":\"cvsToprojects\"},{\"name\":\"references\",\"kind\":\"object\",\"type\":\"references\",\"relationName\":\"cvsToreferences\"},{\"name\":\"languages\",\"kind\":\"object\",\"type\":\"languages\",\"relationName\":\"cvsTolanguages\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"cvsTousers\"}],\"dbName\":null},\"educations\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"school\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"graduated_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gpa\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"cvsToeducations\"}],\"dbName\":null},\"experiences\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"cvsToexperiences\"}],\"dbName\":null},\"features\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"feature_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"membershipPlans\",\"kind\":\"object\",\"type\":\"membershipPlans\",\"relationName\":\"featuresTomembershipPlans\"}],\"dbName\":null},\"feedbacks\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stars\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"work_environment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benefit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"companies\",\"relationName\":\"companiesTofeedbacks\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"feedbacksTousers\"}],\"dbName\":null},\"fields\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"field_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"companies\",\"relationName\":\"companiesTofields\"}],\"dbName\":null},\"followedCompanies\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"company_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"followed_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"is_notified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"companies\",\"relationName\":\"companiesTofollowedCompanies\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"followedCompaniesTousers\"}],\"dbName\":null},\"jobCategories\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobSpecialized\",\"kind\":\"object\",\"type\":\"jobSpecialized\",\"relationName\":\"jobCategoriesTojobSpecialized\"}],\"dbName\":null},\"jobLabels\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"jobs\",\"relationName\":\"jobLabelsTojobs\"}],\"dbName\":null},\"jobSpecialized\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"job_type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobcategory_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"careerPaths\",\"kind\":\"object\",\"type\":\"careerPaths\",\"relationName\":\"careerPathsTojobSpecialized\"},{\"name\":\"jobCategories\",\"kind\":\"object\",\"type\":\"jobCategories\",\"relationName\":\"jobCategoriesTojobSpecialized\"}],\"dbName\":null},\"jobs\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job_title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"benefit\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"working_time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job_type\",\"kind\":\"enum\",\"type\":\"Job_Type\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"Job_Status\"},{\"name\":\"job_level\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"skill_tags\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"education\",\"kind\":\"enum\",\"type\":\"Education\"},{\"name\":\"experience\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"category_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"applicants\",\"kind\":\"object\",\"type\":\"applicants\",\"relationName\":\"applicantsTojobs\"},{\"name\":\"categories\",\"kind\":\"object\",\"type\":\"categories\",\"relationName\":\"categoriesTojobs\"},{\"name\":\"jobLabels\",\"kind\":\"object\",\"type\":\"jobLabels\",\"relationName\":\"jobLabelsTojobs\"},{\"name\":\"savedJobs\",\"kind\":\"object\",\"type\":\"savedJobs\",\"relationName\":\"jobsTosavedJobs\"}],\"dbName\":null},\"membershipPlans\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"plan_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"duration_days\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"is_active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"features\",\"kind\":\"object\",\"type\":\"features\",\"relationName\":\"featuresTomembershipPlans\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"subscriptions\",\"relationName\":\"membershipPlansTosubscriptions\"}],\"dbName\":null},\"messages\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message_content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response_content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"messagesTousers\"}],\"dbName\":null},\"payments\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payment_gateway\",\"kind\":\"enum\",\"type\":\"PaymentGateway\"},{\"name\":\"payment_method\",\"kind\":\"enum\",\"type\":\"PaymentMethod\"},{\"name\":\"transaction_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"paymentsTousers\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"subscriptions\",\"relationName\":\"paymentsTosubscriptions\"}],\"dbName\":null},\"personalityTestResults\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"question_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"answer_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"answers\",\"relationName\":\"answersTopersonalityTestResults\"},{\"name\":\"questions\",\"kind\":\"object\",\"type\":\"questions\",\"relationName\":\"personalityTestResultsToquestions\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"personalityTestResultsTousers\"}],\"dbName\":null},\"projects\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"cvsToprojects\"}],\"dbName\":null},\"questions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"question\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"answers\",\"kind\":\"object\",\"type\":\"answers\",\"relationName\":\"answersToquestions\"},{\"name\":\"personalityTestResults\",\"kind\":\"object\",\"type\":\"personalityTestResults\",\"relationName\":\"personalityTestResultsToquestions\"}],\"dbName\":null},\"references\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cv_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"cvsToreferences\"}],\"dbName\":null},\"roles\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"role_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"rolesTousers\"}],\"dbName\":null},\"savedJobs\":{\"fields\":[{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"job_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"saved_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"jobs\",\"relationName\":\"jobsTosavedJobs\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"savedJobsTousers\"}],\"dbName\":null},\"subscriptions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"start_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"end_date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"amount_paid\",\"kind\":\"scalar\",\"type\":\"BigInt\"},{\"name\":\"is_extended\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SubscriptionStatus\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"plan_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"payment_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payments\",\"relationName\":\"paymentsTosubscriptions\"},{\"name\":\"membershipPlans\",\"kind\":\"object\",\"type\":\"membershipPlans\",\"relationName\":\"membershipPlansTosubscriptions\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"subscriptionsTousers\"}],\"dbName\":null},\"userActivitiesHistory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"activity_name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"userActivitiesHistoryTousers\"}],\"dbName\":null},\"userNotifications\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user_id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationsType\"},{\"name\":\"is_read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sent_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"read_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"users\",\"kind\":\"object\",\"type\":\"users\",\"relationName\":\"userNotificationsTousers\"}],\"dbName\":null},\"users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar_url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_ward\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address_country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"gender\",\"kind\":\"enum\",\"type\":\"Gender\"},{\"name\":\"is_deleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"created_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updated_at\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"role_id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"cvs\",\"kind\":\"object\",\"type\":\"cvs\",\"relationName\":\"cvsTousers\"},{\"name\":\"blogs\",\"kind\":\"object\",\"type\":\"blogs\",\"relationName\":\"blogsTousers\"},{\"name\":\"careerPaths\",\"kind\":\"object\",\"type\":\"careerPaths\",\"relationName\":\"careerPathsTousers\"},{\"name\":\"companies\",\"kind\":\"object\",\"type\":\"companies\",\"relationName\":\"companiesTousers\"},{\"name\":\"feedbacks\",\"kind\":\"object\",\"type\":\"feedbacks\",\"relationName\":\"feedbacksTousers\"},{\"name\":\"followedCompanies\",\"kind\":\"object\",\"type\":\"followedCompanies\",\"relationName\":\"followedCompaniesTousers\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"messages\",\"relationName\":\"messagesTousers\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"payments\",\"relationName\":\"paymentsTousers\"},{\"name\":\"personalityTestResults\",\"kind\":\"object\",\"type\":\"personalityTestResults\",\"relationName\":\"personalityTestResultsTousers\"},{\"name\":\"savedJobs\",\"kind\":\"object\",\"type\":\"savedJobs\",\"relationName\":\"savedJobsTousers\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"subscriptions\",\"relationName\":\"subscriptionsTousers\"},{\"name\":\"userActivitiesHistory\",\"kind\":\"object\",\"type\":\"userActivitiesHistory\",\"relationName\":\"userActivitiesHistoryTousers\"},{\"name\":\"reviews\",\"kind\":\"object\",\"type\":\"reviews\",\"relationName\":\"reviewsTousers\"},{\"name\":\"userNotifications\",\"kind\":\"object\",\"type\":\"userNotifications\",\"relationName\":\"userNotificationsTousers\"},{\"name\":\"roles\",\"kind\":\"object\",\"type\":\"roles\",\"relationName\":\"rolesTousers\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

